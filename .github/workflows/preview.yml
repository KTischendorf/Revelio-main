name: Deploy PR previews

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - main

concurrency: preview-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write

jobs:
  deploy:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install Draw.io Desktop
        run: |
          set -euo pipefail
  
          drawio_arch=amd64
          drawio_version=18.1.3
          drawio_sha256sum=39a50f25ad52d6909c5c18d89a7cfc193e8e31fb98458a390c0a0709d22e9e10
  
          drawio_deb="drawio-${drawio_arch}-${drawio_version}.deb"
          drawio_url="https://github.com/jgraph/drawio-desktop/releases/download/v${drawio_version}/${drawio_deb}"
  
          curl -L -o "$drawio_deb" "$drawio_url"
          sha256sum --check <<<"${drawio_sha256sum}  $drawio_deb"
          sudo apt-get install -y libasound2t64 xvfb ./"$drawio_deb"

      - name: Set cache ID
        run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2

      - name: Install Python dependencies
        run: poetry install

      - name: Cache MkDocs build
        uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      - name: Build the site
        run: xvfb-run -a poetry run mkdocs build --site-dir site

      - name: Deploy preview
        run: |
          git fetch origin gh-pages
          git checkout gh-pages
          mkdir -p preview/${{ github.event.number }}
          cp -r site/* preview/${{ github.event.number }}/
          git add preview/${{ github.event.number }}
          git commit -m "Deploy preview for PR #${{ github.event.number }}"
          git push origin gh-pages

      - name: Post comment on PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=$(jq --raw-output .number "$GITHUB_EVENT_PATH")
          PREVIEW_URL="https://revelio.jackhenry.com/preview/${{ github.event.number }}/"
          COMMENT_BODY="The site is deployed for preview: ${PREVIEW_URL}"
          curl -s -H "Authorization: token $GITHUB_TOKEN" -X POST -d "{\"body\":\"$COMMENT_BODY\"}" "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments"

  cleanup:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Remove preview
        run: |
          git fetch origin gh-pages
          git checkout gh-pages
          git rm -r preview/${{ github.event.number }}
          git commit -m "Remove preview for PR #${{ github.event.number }}"
          git push origin gh-pages
